<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.carlspring.cloud.aws</groupId>
    <artifactId>s3fs-nio</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>S3FS NIO</name>
    <description>A Java NIO FileSystem Provider for Amazon AWS S3.</description>
    <url>https://github.com/carlspring/s3fs-nio</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>jcustovic</id>
            <name>Jan Čustović</name>
            <email>jan.custovic@gmail.com</email>
        </developer>
        <developer>
            <id>heikkipora</id>
            <name>Heikki Pora</name>
            <email>heikki.pora@gmail.com</email>
        </developer>
        <developer>
            <id>pditommaso</id>
            <name>Paolo Di Tommaso</name>
            <email>paolo.ditommaso@gmail.com</email>
        </developer>
        <developer>
            <id>sbeimin</id>
            <name>Syte Beimin</name>
            <email>syte.beimin@gmail.com</email>
        </developer>
        <developer>
            <id>jarnaiz</id>
            <name>Javier Arnáiz</name>
            <email>arnaix@gmail.com</email>
        </developer>
        <developer>
            <id>martint</id>
            <name>Martin Traverso</name>
            <email>mtraverso@gmail.com</email>
        </developer>
        <developer>
            <id>carlspring</id>
            <name>Martin Todorov</name>
            <email>carlspring@gmail.com</email>
            <organization>Carlspring Consulting &amp; Development Ltd.</organization>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/carlspring/s3fs-nio.git</connection>
        <developerConnection>scm:git:git@github.com:carlspring/s3fs-nio.git</developerConnection>
        <url>https://github.com/carlspring/s3fs-nio</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Sonarcloud properties -->
        <sonar.projectKey>org.carlspring.cloud.aws:s3fs-nio</sonar.projectKey>
        <sonar.organization>carlspring</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <!-- Sonarcloud properties -->

        <version.slf4j>1.7.30</version.slf4j>
        <version.software.amazon.awssdk>2.16.99</version.software.amazon.awssdk>
        <version.guava>30.1.1-jre</version.guava>
        <version.tika>1.25</version.tika>
        <version.findbugs.jsr305>3.0.2</version.findbugs.jsr305>
        <version.junit>5.7.1</version.junit>
        <version.mockito>3.9.0</version.mockito>
        <version.marschall.memoryfilesystem>2.1.0</version.marschall.memoryfilesystem>
        <version.surefire>3.0.0-M5</version.surefire>
        <version.testcontainers>1.15.2</version.testcontainers>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Disable default behavior to allow CI fine-tuning -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.surefire}</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>create-source-jar</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${version.software.amazon.awssdk}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${version.guava}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${version.tika}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${version.findbugs.jsr305}</version>
        </dependency>

        <!-- for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.marschall</groupId>
            <artifactId>zipfilesystem-standalone</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.marschall</groupId>
            <artifactId>memoryfilesystem</artifactId>
            <version>${version.marschall.memoryfilesystem}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>

        <!-- needs extra dependencies: objenesis & hamcrest -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${version.mockito}</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <profiles>
        <!-- Reminder: To run all tests use -Punit-tests,it-minio,it-s3 since activeByDefault is disabled when `-P`
                       is being used.  -->
        <profile>
            <id>unit-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire}</version>
                        <configuration>
                            <!-- Make sure the build fails if no tests are executed! -->
                            <failIfNoTests>true</failIfNoTests>
                            <!-- Since we are not tagging unit tests, this actually means "execute all non-tagged tests" -->
                            <excludedGroups>*</excludedGroups>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unit-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Note: Ordering of it-minio and it-s3 is important since we want for it-minio to execute first so we -->
        <!--       can catch issues earlier and hit the S3 API endpoints less often which optimizes costs. -->
        <profile>
            <!-- This should work but is not tested since it depends on https://github.com/carlspring/s3fs-nio/issues/60 -->
            <id>it-minio</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <configuration>
                            <!-- Make sure the build fails if no tests are executed! -->
                            <failIfNoTests>true</failIfNoTests>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <systemPropertyVariables>
                                <!-- used in EnvironmentBuilder.java -->
                                <running.it>minio</running.it>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>it-minio</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <!-- This configuration must happen at execution level, otherwise you'll get: -->
                                <!-- Skipping execution of surefire because it has already been run for this configuration -->
                                <configuration>
                                    <!-- Include only s3 tagged integration tests -->
                                    <groups>it-minio</groups>
                                    <excludedGroups>*</excludedGroups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>it-minio-verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>it-s3</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <configuration>
                            <!-- Make sure the build fails if no tests are executed! -->
                            <failIfNoTests>true</failIfNoTests>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <systemPropertyVariables>
                                <!-- used in EnvironmentBuilder.java -->
                                <running.it>s3</running.it>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>it-s3</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <!-- This configuration must happen at execution level, otherwise you'll get: -->
                                <!-- Skipping execution of surefire because it has already been run for this configuration -->
                                <configuration>
                                    <!-- Include only s3 tagged integration tests -->
                                    <groups>it-s3</groups>
                                    <excludedGroups>*</excludedGroups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>it-s3-verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jacoco-code-coverage</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <configuration>
                            <argLine>${jacoco.agent.arg}</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <configuration>
                            <argLine>${jacoco.agent.arg}</argLine>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.6</version>

                        <executions>
                            <!-- Prepare execution with Surefire -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>jacoco.agent.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            <!-- Generate report after tests are run -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release-sign-artifacts</id>

            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <useAgent>true</useAgent>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
