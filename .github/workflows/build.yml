name: Build and test
on:
  # Build PRs 
  pull_request: ~
  # On push event
  push:
    # Build only changes pushed into the `master` branch.
    branches:
      - master
      - pipeline
    # Ignore documentation changes (Netlify will handle this)
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '**/*.md'
  workflow_dispatch:

# Currently you cannot use ${{ env.IS_FORK }} for some reason, which is why you might need to copy-paste some of these.
env:
  REPOSITORY: ${{ github.repository }}
  IS_FORK: ${{ github.repository != 'carlspring/s3fs-nio' }}
  IS_PR: ${{ github.event_name == 'pull_request' }}
  EVENT_NAME: ${{ toJSON(github.event_name) }}
  # format: username:branch
  PR_HEAD_LABEL: ${{ toJSON(github.event.pull_request.head.label) }}
  PR_NUMBER: ${{ github.event.number }}

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        java: [ 8, 11 ]
    steps:
      - name: Show GitHub context
        run: echo "$EVENT_NAME $REPOSITORY $PR_HEAD_LABEL $IS_PR $IS_FORK"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          # The Gradle wrapper's version (already the default, putting it here to clarity)
          gradle-version: wrapper
          # Removing unused files from Gradle User Home before saving to cache (i.e. older versions of gradle)
          gradle-home-cache-cleanup: true
          # Cache downloaded JDKs in addition to the default directories.
          gradle-home-cache-includes: |
            caches
            notifications
            jdks

      - name: Build and test
        env:
          S3FS_BUCKET_NAME: ${{ secrets.S3FS_BUCKET_NAME }}
          S3FS_ACCESS_KEY: ${{ secrets.S3FS_ACCESS_KEY }}
          S3FS_SECRET_KEY: ${{ secrets.S3FS_SECRET_KEY }}
          S3FS_REGION: ${{ secrets.S3FS_REGION }}
          S3FS_PROTOCOL: "https"
        run: ./gradlew test jacocoTestReport --scan

      - name: Publish code analysis to Sonarcloud
        # [WARNING] The version of Java 1.8 you have used to run this analysis is deprecated and we will stop accepting
        #           it from October 2020. Please update to at least Java 11.
        # [WARNING] No analysis for external contributors - sorry.
        #           Check https://github.com/carlspring/s3fs-nio/pull/77#issuecomment-686804207
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java == '11' && env.IS_FORK != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          S3FS_PUBLISH_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar
        continue-on-error: true

      - name: Publish snapshot (master branch)
        if: ${{ env.IS_FORK == 'false' && github.ref_name == 'master' }}
        env:
          S3FS_PUBLISH_SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          S3FS_PUBLISH_SONATYPE_PASS: ${{ secrets.SONATYPE_PASS }}
        run: ./gradew publish

#  run-it-minio:
#    runs-on: ${{ matrix.os }}
#    needs: [build-matrix]
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest]
#        java: [ 8, 11.0.3 ]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Setup Java ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          # https://github.com/actions/cache/issues/2#issuecomment-673493515
#          # Example: unix timestamp
#          key: ${{ runner.os }}-maven-${{ secrets.MVN_CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-${{ secrets.MVN_CACHE_VERSION }}-
#      - name: Cache Docker images
#        id: docker-cache
#        uses: actions/cache@v2
#        with:
#          path: ${{ github.workspace }}/docker-image-cache.tar
#          # https://github.com/actions/cache/issues/2#issuecomment-673493515
#          # Example: unix timestamp
#          key: ${{ runner.os }}-docker-${{ secrets.DOCKER_CACHE_VERSION }}-${{ hashFiles('${{ github.workspace }}/docker-image-cache.tar') }}
#          restore-keys: |
#            ${{ runner.os }}-docker-${{ secrets.DOCKER_CACHE_VERSION }}-
#      - name: Load docker image cache
#        if: steps.docker-cache.outputs.cache-hit == 'true'
#        run: |
#          cat ${{ github.workspace }}/docker-image-cache.tar | docker load
#          docker images | grep -iE "minio|testcontainers"
#      - name: Docker info
#        run: docker info
#      - name: Maven Version
#        run: mvn --version
#      - name: MinIO integration tests.
#        run: mvn clean install -Pit-minio
#        env:
#          S3FS_BUCKET_NAME: "s3fs-nio-minio"
#          # access key must be >= 3 chars or authentication will fail.
#          S3FS_ACCESS_KEY: "access_key"
#          # secret key must be >= 8 chars or authentication will fail.
#          S3FS_SECRET_KEY: "secret_key"
#          S3FS_PROTOCOL: "http"
#          # TODO: These are necessary since the current logic in EnvironmentBuilder assumes we are using S3.
#          S3FS_REGION: "local"
#          # TODO: Adding this env var in advance, we might or might not need it after the test containers task is completed.
#          #       https://github.com/carlspring/s3fs-nio/issues/60
#          S3FS_PORT: 9000
#      - name: Save docker images
#        run: docker save minio/minio testcontainers/ryuk > ${{ github.workspace }}/docker-image-cache.tar

#  run-it-s3:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: true
#      matrix:
#        # TODO: We should, at some point, have the same matrix as `build-matrix`.
#        os: [ubuntu-latest, windows-latest]
#        java: [ 8 ]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Setup Java ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          # https://github.com/actions/cache/issues/2#issuecomment-673493515
#          # Example: unix timestamp
#          key: ${{ runner.os }}-maven-${{ secrets.MVN_CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-${{ secrets.MVN_CACHE_VERSION }}-
#      - name: Maven Version
#        run: mvn --version
#      - name: S3 integration tests.
#        run: mvn clean install -Pit-s3
#        env:
#          S3FS_BUCKET_NAME: ${{ secrets.S3FS_BUCKET_NAME }}
#          S3FS_ACCESS_KEY: ${{ secrets.S3FS_ACCESS_KEY }}
#          S3FS_SECRET_KEY: ${{ secrets.S3FS_SECRET_KEY }}
#          S3FS_REGION: ${{ secrets.S3FS_REGION }}
#          S3FS_PROTOCOL: "https"
